#!/c/Python33/ python
import sys
import msvcrt
import socket,_thread as thread, threading
import time 
def UdpList(sock):
  while(1):
    data, addr = sock.recvfrom(1024) # buffer size is 1024 bytes
    print (addr)
    print (data,len(data))
def RTM64CRC16(pbuffer , Len):
  """CRC16 for RTM64"""
  CRC = 0x0000
  k = 0
  while (k < Len):
    CRC = (CRC^((pbuffer[k]<<8)&0xFFFF))
    k+=1
    i=8
    while (i):
      i-=1
      if (CRC & 0x8000): CRC = (((CRC<<1)&0xFFFF)^0x1021)
      else: CRC = ((CRC<<1)&0xFFFF)
  return CRC

if __name__ == '__main__':


  UDP_IP = '172.16.1.6'
  UDP_PORT_CLIENT = 7
  UDP_PORT_SERVER = 7
#  rtm_mw_packet = [0xfa,0x15,0x00,0x00,0x00,0x07,0x00,0x02,0x04,0x01,0x05,0x01,0x01,0x01,0x01,0x11,0x00,0x12,0x00,0x71,0xea]
#  rtm_mw_packet = [0xfa,0x17,0x00,0x00,0x00,0x07,0x00,0x02,0x04,0x01,0x05,0x01,0x01,0x01,0x01,0x11,0x00,0x12,0x00,0x13,0x00,0x89,0xac]
#  rtm_mw_packet= [0xfa,0x13,0x00,0x00,0x00,0x07,0x00,0x02,0x04,0x01,0x05,0x01,0x01,0x01,0x01,0x12,0x00,0xa2,0x78]
  rtm_mw_packet = [0xfa,0x13,0x00,0x00,0x00,0x07,0x00,0x02,0x06,0x00,0x08,0x03,0x01,0x01,0x01,0x00,0x00]
  CRC = RTM64CRC16(rtm_mw_packet, len(rtm_mw_packet))
  rtm_mw_packet.append(CRC&0xFF)
  rtm_mw_packet.append((CRC>>8)&0xFF)

#  rtm_mw_packet = [0xfa,0x13,0x00,0x00,0x00,0x07,0x00,0x02,0x04,0x01,0x05,0x01,0x01,0x01,0x02,0x03,0x00,0xb0,0x11]
#  rtm_mw_packet= [0xfa,0x13,0x00,0x00,0x00,0x07,0x00,0x02,0x04,0x01,0x05,0x01,0x01,0x01,0x02,0x12,0x00,0xf2,0x21]
  MESSAGE = "Hello,mega 04!"
  
  print ("UDP target IP:", UDP_IP)
  print ("UDP target port:", UDP_PORT_SERVER)
  print (MESSAGE)
 
  sock = socket.socket(socket.AF_INET, # Internet
                       socket.SOCK_DGRAM) # UDP
  sock.bind(("", UDP_PORT_CLIENT))

  thread.start_new_thread(UdpList, (sock,))
  while 1:
    q = msvcrt.getch()
    print(ord(q))
    if ord(q) == 113:#q
      sys.exit(1)
    elif ord(q)==99:#c
      Packet_str = bytearray(rtm_mw_packet[0:])
      sock.sendto(Packet_str,(UDP_IP, UDP_PORT_SERVER))
#      sock.sendto(MESSAGE.encode('utf-8'), (UDP_IP, UDP_PORT_SERVER))
    elif ord(q)==108:#l
      while (1):
        Packet_str = bytearray(rtm_mw_packet[0:])
        sock.sendto(Packet_str, (UDP_IP, UDP_PORT))
        print(Packet_str)
        time.sleep(0.5)
